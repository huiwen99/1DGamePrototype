module shifter (
    input alufn[6],
    input a[16],
    input b[16],
    output a_out[16]
  ) {
  sig a_temp[16];
  always {
  
    case(alufn[1:0]){
    b00: //SHL (shift left)
    a_out = a << b[3:0];
        
    b01: //SHR (shift right)
    a_out = a >> b[3:0];
        
    b11: //SRA (shift right with sign extension)
    a_out = $signed(a) >>> b[3:0];
        
    b10: //shift a by 2 and add first 2 bits of b to a, 100010
    a_temp = a >> 2;
    a_out = c{b[15:14],a_temp[13:0]};
        
        
    default:
    a_out = a;
    }
  }
}
